{\rtf1\ansi\ansicpg1252\cocoartf1344\cocoasubrtf720
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red10\green12\blue39;\red52\green186\blue34;\red51\green180\blue193;
}
\margl1440\margr1440\vieww12000\viewh8400\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs22 \cf1 \cb2 \CocoaLigature0 Last login: Sat Mar 21 14:48:47 on ttys000\
Sun Mar 22 10:13:14 CDT 2015\
\
-------------------------------------------------\
If you need to create a platform specific folder using Phonegap, please do the following:\
1) First, run the 'echo PATH=$PATH:/Users/francislawrence/Programming/phonegap-2.9.1/lib/<specific_platform>/bin' command.\
2) Then, you need to change your working directory to the bin of that platform in that same phonegap folder.\
3) Then, run the 'create name com.example.name Name' command.\
\
Also, if you need to change any of these settings, go to your home directory (~) and type \'91nano .bash_profile\'92.\
\
Also, if you need to do the EMULATE command, you have to go to the app folder and then run \'91ripple emulate\'92.\
\
To edit irb ish, use the bash command 'nano ~/.inputrc'.\
To substitute something in the previous line, type something like this... ^toreplace^touse\
To search previous lines, use Ctrl-R.\
To leave that screen you can get stuck in, use q when the END is highlighted.\
To learn the escape characters of buttons, first type ^V\
Jump to start of line ^A\
Jump to end of line ^E\
Clear text onward ^K\
Clear backward by word ^W\
Toggle between current cursor position and start of line ^XX\
Clear whole line ^U\
Bring last line back ^Y\
Search previous lines ^R\
! preceding starting character, Enter invokes last command\
To modify the last command, type !<firstfewcharacters>:s/<toreplace>/<desired>\
Keep Mac awake: $ caffeinate -u -t 600 (add options to set timer)\
------------------------------------------------------\
10:13:15|~ $ irb\
array = [1, 2, 3, 4, 5, 6]\
string_array = ["a", "b", "c", "d", "e"]\
hsh = \{:a=>1, :b=>2, :c=>3, :d=>4, :e=>5\}\
string = "This is a test string. It's cool for some stuff."\
num = 5\
irb(main):001:0> exit\
10:14:11|~ $ irb\
array = [1, 2, 3, 4, 5, 6]\
string_array = ["a", "b", "c", "d", "e"]\
hsh = \{:a=>1, :b=>2, :c=>3, :d=>4, :e=>5\}\
string = "This is a test string. It's cool for some stuff."\
num = 5\
irb(main):001:0> r36\
=> true\
irb(main):002:0> a37 = Hangman::Game.new.("a37")\
ArgumentError: wrong number of arguments (0 for 1)\
	from /Users/francislawrence/Programming/Ruby-Training_l/36_Hangman/lib/game.rb:5:in `initialize'\
	from (irb):2:in `new'\
	from (irb):2\
	from /Users/francislawrence/.rbenv/versions/2.2.0/bin/irb:11:in `<main>'\
irb(main):003:0> a37 = Hangman::Game.new("a37")\
DEBUG: This is \cf3 a37\cf1 !!!\
Welcome to Hangman! At each turn, you can\
type 'save' to save your game and leave.\
What's your name? Example: John Butt\
Alex Fried\
----------------------------------------------------------------------------------\
Thanks, Alex Fried. Your user_name is friealex.\
You do not yet have a folder for your\
data. I am going to make one now.\
Would you like to load a past, \
unfinished game?\
.\
..\
Give me the number of the one you want\
to finish or press Return for a new game.\
\
Choosing a word between 5 and 12 characters.\
DEBUG: The word is tenseness, which is of class String.\
What would you like to call the file \
to which these data are saved?\
beard\
DEBUG: The word is tenseness, of class String.\
DEBUG: word_array_1 is ["tenseness"]!\
DEBUG: Letter of word_array_1 is tenseness.\
DEBUG: Index of that letter is 0.\
DEBUG: lett_sym is tenseness.\
DEBUG: I've just added 1 to the value under the lett_sym (tenseness) key in lett_freq_hash, which is now \{:tenseness=>1\}.\
DEBUG: I've just added that index value (0) to the lett_sym (tenseness) key in lett_i_hash, which is now \{\}.\
DEBUG: Lett_i_hash = \{\}!!\
DEBUG: Lett_freq_hash is \{:tenseness=>1\}!!\
 _ _ _ _ _ _ _ _ _\
Are you ready?\
^CIRB::Abort: abort then interrupt!\
	from /Users/francislawrence/Programming/Ruby-Training_l/36_Hangman/lib/game.rb:81:in `call'\
	from /Users/francislawrence/Programming/Ruby-Training_l/36_Hangman/lib/game.rb:81:in `gets'\
	from /Users/francislawrence/Programming/Ruby-Training_l/36_Hangman/lib/game.rb:81:in `gets'\
	from /Users/francislawrence/Programming/Ruby-Training_l/36_Hangman/lib/game.rb:81:in `game_start'\
	from /Users/francislawrence/Programming/Ruby-Training_l/36_Hangman/lib/game.rb:40:in `initialize'\
	from (irb):3:in `new'\
	from (irb):3\
	from /Users/francislawrence/.rbenv/versions/2.2.0/bin/irb:11:in `<main>'\
irb(main):004:0> pcya "I couldn't find the problem when I looked\\nin the code and was putting in those\\ndebugs last night. Let's take a\\nscreenshot before we fix it.\\nSee SC_1."\
\cf4 I couldn't find the problem when I looked\cf1 \
\cf4 in the code and was putting in those\cf1 \
\cf4 debugs last night. Let's take a\cf1 \
\cf4 screenshot before we fix it.\cf1 \
\cf4 See SC_1.\cf1 \
=> nil\
irb(main):005:0> clr\
array = [1, 2, 3, 4, 5, 6]\
string_array = ["a", "b", "c", "d", "e"]\
hsh = \{:a=>1, :b=>2, :c=>3, :d=>4, :e=>5\}\
string = "This is a test string. It's cool for some stuff."\
num = 5\
irb(main):001:0> pcya "OH. #SPLIT JUST SPLITS ALONG space IF\\nNO DELIMITER IS GIVEN."\
\cf4 OH. #SPLIT JUST SPLITS ALONG space IF\cf1 \
\cf4 NO DELIMITER IS GIVEN.\cf1 \
=> nil\
irb(main):002:0> gets.downcase.split("")\
blahblahblah\
=> ["b", "l", "a", "h", "b", "l", "a", "h", "b", "l", "a", "h", "\\n"]\
irb(main):003:0> clr\
array = [1, 2, 3, 4, 5, 6]\
string_array = ["a", "b", "c", "d", "e"]\
hsh = \{:a=>1, :b=>2, :c=>3, :d=>4, :e=>5\}\
string = "This is a test string. It's cool for some stuff."\
num = 5\
irb(main):001:0> r36\
=> true\
irb(main):002:0> a38 = Hangman::Game.new("a38")\
DEBUG: This is \cf3 a38\cf1 !!!\
Welcome to Hangman! At each turn, you can\
type 'save' to save your game and leave.\
What's your name? Example: John Butt\
Michael Phelps\
----------------------------------------------------------------------------------\
Thanks, Michael Phelps. Your user_name is phelmich.\
You do not yet have a folder for your\
data. I am going to make one now.\
Would you like to load a past, \
unfinished game?\
.\
..\
Give me the number of the one you want\
to finish or press Return for a new game.\
\
Choosing a word between 5 and 12 characters.\
DEBUG: The word is snuck, which is of class String.\
What would you like to call the file \
to which these data are saved?\
swimming\
DEBUG: The word is snuck, of class String.\
DEBUG: word_array_1 is ["s", "n", "u", "c", "k"]!\
DEBUG: Letter of word_array_1 is s.\
DEBUG: Index of that letter is 0.\
DEBUG: lett_sym is s.\
DEBUG: I've just added 1 to the value under the lett_sym (s) key in lett_freq_hash, which is now \{:s=>1\}.\
DEBUG: I've just added that index value (0) to the lett_sym (s) key in lett_i_hash, which is now \{\}.\
DEBUG: Letter of word_array_1 is n.\
DEBUG: Index of that letter is 1.\
DEBUG: lett_sym is n.\
DEBUG: I've just added 1 to the value under the lett_sym (n) key in lett_freq_hash, which is now \{:s=>1, :n=>1\}.\
DEBUG: I've just added that index value (1) to the lett_sym (n) key in lett_i_hash, which is now \{\}.\
DEBUG: Letter of word_array_1 is u.\
DEBUG: Index of that letter is 2.\
DEBUG: lett_sym is u.\
DEBUG: I've just added 1 to the value under the lett_sym (u) key in lett_freq_hash, which is now \{:s=>1, :n=>1, :u=>1\}.\
DEBUG: I've just added that index value (2) to the lett_sym (u) key in lett_i_hash, which is now \{\}.\
DEBUG: Letter of word_array_1 is c.\
DEBUG: Index of that letter is 3.\
DEBUG: lett_sym is c.\
DEBUG: I've just added 1 to the value under the lett_sym (c) key in lett_freq_hash, which is now \{:s=>1, :n=>1, :u=>1, :c=>1\}.\
DEBUG: I've just added that index value (3) to the lett_sym (c) key in lett_i_hash, which is now \{\}.\
DEBUG: Letter of word_array_1 is k.\
DEBUG: Index of that letter is 4.\
DEBUG: lett_sym is k.\
DEBUG: I've just added 1 to the value under the lett_sym (k) key in lett_freq_hash, which is now \{:s=>1, :n=>1, :u=>1, :c=>1, :k=>1\}.\
DEBUG: I've just added that index value (4) to the lett_sym (k) key in lett_i_hash, which is now \{\}.\
DEBUG: Lett_i_hash = \{\}!!\
DEBUG: Lett_freq_hash is \{:s=>1, :n=>1, :u=>1, :c=>1, :k=>1\}!!\
 _ _ _ _ _\
Are you ready?\
^CIRB::Abort: abort then interrupt!\
	from /Users/francislawrence/Programming/Ruby-Training_l/36_Hangman/lib/game.rb:81:in `call'\
	from /Users/francislawrence/Programming/Ruby-Training_l/36_Hangman/lib/game.rb:81:in `gets'\
	from /Users/francislawrence/Programming/Ruby-Training_l/36_Hangman/lib/game.rb:81:in `gets'\
	from /Users/francislawrence/Programming/Ruby-Training_l/36_Hangman/lib/game.rb:81:in `game_start'\
	from /Users/francislawrence/Programming/Ruby-Training_l/36_Hangman/lib/game.rb:40:in `initialize'\
	from (irb):2:in `new'\
	from (irb):2\
	from /Users/francislawrence/.rbenv/versions/2.2.0/bin/irb:11:in `<main>'\
irb(main):003:0> pcya "DAMN IT. LETT_I_HASH"\
\cf4 DAMN IT. LETT_I_HASH\cf1 \
=> nil\
irb(main):004:0> lett_i_hash = Hash.new([])\
=> \{\}\
irb(main):005:0> lett_i_hash[:a] << 1\
=> [1]\
irb(main):006:0> lett_i_hash\
=> \{\}\
irb(main):007:0> pcya "HM...."\
\cf4 HM....\cf1 \
=> nil\
irb(main):008:0> lett_i_hash = \{a: [1,2,3], b: [4,5,6]\}\
=> \{:a=>[1, 2, 3], :b=>[4, 5, 6]\}\
irb(main):009:0> lett_i_hash[:a] << "a"\
=> [1, 2, 3, "a"]\
irb(main):010:0> lett_i_hash\
=> \{:a=>[1, 2, 3, "a"], :b=>[4, 5, 6]\}\
irb(main):011:0> pcya "WHAT THE HELL"\
\cf4 WHAT THE HELL\cf1 \
=> nil\
irb(main):012:0> lett_i_hash = Hash.new([])\
=> \{\}\
irb(main):013:0> lett_i_hash[:a] << "a"\
=> ["a"]\
irb(main):014:0> lett_i_hash\
=> \{\}\
irb(main):015:0> exit\
10:58:33|~ $ \
}